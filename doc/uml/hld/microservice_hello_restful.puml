@startuml

allowmixing

package "Microservice Architecture" {
    package "RESTful Microservice" {
        package "Controller" {
            class HelloController {
                - helloService: HelloService
                + GET /hello/string(token: string): String!
                + GET /hello/json(token: string): HelloJsonResponseDTO
            }
        }

        package "Middleware" {
            class AuthMiddleware {
                + authenticateRequest(request: HttpRequest): bool
                + validateToken(token: string): bool
                + extractHelloFromToken(token: string): Hello
            }
        }

        package "Service" {
            class HelloService {
                + getHelloString(uuid: ID): HelloStringResponseDTO
                + getHelloJson(uuid: ID): HelloJsonResponseDTO
            }
        }

        HelloController --> HelloService
        HelloController --> AuthMiddleware
        AuthMiddleware --> HelloController

        ' class HelloStringResponseDTO

        ' class DataDTO {
        '     - message: string
        ' }

        ' class HelloJsonResponseDTO {
        '     - data: DataDTO
        ' }
    }

    package "Log Aggregation" {
        class LogAggregator {
            - log: Log
            - auditLog: AuditLog
        }

        ' class AuditLog {
        '     + message: String
        '     + timestamp: DateTime
        ' }

        ' class Log {
        '     + message: String
        '     + timestamp: DateTime
        ' }
    }

    HelloController --> LogAggregator : <<Sends Audit Log>>
    HelloService --> LogAggregator : <<Sends Log>>
}

@enduml
